#!groovy

if (currentBuild.getBuildCauses().toString().contains('BranchIndexingCause')) {
  print "INFO: Build skipped due being triggered by Branch Indexing instead of SCM change!"
  currentBuild.result = 'ABORTED' // default would be successful: this makes it more clear that is thas been skipped
  return
}


pipeline {
    agent { label 'pcsgs05' }

    options {
        buildDiscarder(
            logRotator(
                daysToKeepStr: "21",
                numToKeepStr: "50",
                artifactDaysToKeepStr: "21",
                artifactNumToKeepStr: "50"
            )
        )
	disableConcurrentBuilds()
    }
    triggers {
        githubPush() // Trigger by push to respective github branch
        pollSCM 'H/30 * * * *' // Fallback polling solution as some pushes are somehow lost
    }
    environment {
        GITHUB_TOKEN = credentials('GITHUB_TOKEN_OCTOTIGER')
        NEXTCLOUD_OCTOTIGER_DEPENDENCIES_TOKEN = credentials('NEXTCLOUD_OCTOTIGER_DEPENDENCIES_TOKEN')
    }
    stages {
        stage('init') {
            steps {
                dir('octotiger') {
                    sh '''
                        github_token=$(echo ${GITHUB_TOKEN} | cut -f2 -d':')
                        curl \
                            --request POST \
                            --url "https://api.github.com/repos/STEllAR-GROUP/octotiger/statuses/$GIT_COMMIT" \
                            --header "Content-Type: application/json" \
                            --header "authorization: Bearer ${github_token}" \
                            --data "{
                                \\"state\\": \\"pending\\",
                                \\"context\\": \\"jenkins-DEV-NODE-TESTS\\",
                                \\"description\\": \\"Jenkins CI Job: jenkins-DEV-NODE-TESTS\\",
                                \\"target_url\\": \\"https://simsgs.informatik.uni-stuttgart.de/jenkins/job/Octo-Tiger%20DEV/job/${JOB_BASE_NAME}/${BUILD_NUMBER}/console\\"
                        }"
                    '''
                }
            }
        }
        stage('checkout') {
            steps {
                dir('octotiger') {
                    sh '''
		    echo "Currently in $(pwd)"
                    rm -rf octotiger 
                    rm -rf OctoTigerBuildChain 
                    git clone https://github.com/STEllAR-GROUP/octotiger.git 
                    cd octotiger 
                    git checkout ${GIT_COMMIT} 
                    git submodule update --init --recursive 
                    cd - 
                    git clone https://github.com/STEllAR-GROUP/OctoTigerBuildChain && cd OctoTigerBuildChain/ 
                    git checkout jenkins-devnode
                    mkdir src 
                    cp -r ../octotiger src/octotiger 
                    cd src 
                    curl -u "qE2mrmzt6rAreW5:${NEXTCLOUD_OCTOTIGER_DEPENDENCIES_TOKEN}" -H 'X-Requested-With: XMLHttpRequest' 'https://ipvs.informatik.uni-stuttgart.de/cloud/public.php/webdav/' -o silo.tar.gz 
                    tar -xvf silo.tar.gz 
                    mv silo-4.10.2 silo 
                    rm silo.tar.gz 
                    '''
                }
            }
        }
        stage('gcc-build') {
            steps {
                dir('octotiger') {
                    sh '''
                    module load cuda
		    cd OctoTigerBuildChain
		    sed -i 's/OCTOTIGER_WITH_BLAST_TEST=OFF/OCTOTIGER_WITH_BLAST_TEST=ON/' build-octotiger.sh
                    ./build-all.sh Release with-CC with-cuda without-mpi without-papi without-apex with-kokkos with-simd without-hpx-backend-multipole without-hpx-backend-monopole with-hpx-cuda-polling
                    '''
                }
            }
        }
        stage('gcc-ctest') {
            steps {
                dir('octotiger') {
                    sh '''
                    module load cuda
		    cd OctoTigerBuildChain/build/octotiger/build
		    ctest --output-on-failure
                    '''
                }
            }
        }
        stage('clang-build') {
            steps {
                dir('octotiger') {
                    sh '''
		    cd OctoTigerBuildChain
		    sed -i 's/OCTOTIGER_WITH_BLAST_TEST=ON/OCTOTIGER_WITH_BLAST_TEST=OFF/' build-octotiger.sh
		    rm -rf build && rm -rf src/boost
                    ./build-all.sh Release with-CC-clang without-cuda without-mpi without-papi without-apex with-kokkos with-simd without-hpx-backend-multipole without-hpx-backend-monopole with-hpx-cuda-polling
                    '''
                }
            }
        }
        stage('clang-ctest') {
            steps {
                dir('octotiger') {
                    sh '''
		    cd OctoTigerBuildChain/build/octotiger/build
		    ctest --output-on-failure
                    '''
                }
            }
        }
    }
    post {
        success {
            sh '''
                github_token=$(echo ${GITHUB_TOKEN} | cut -f2 -d':')
                curl \
                    --request POST \
                    --url "https://api.github.com/repos/STEllAR-GROUP/octotiger/statuses/$GIT_COMMIT" \
                    --header "Content-Type: application/json" \
                    --header "authorization: Bearer ${github_token}" \
                    --data "{
                        \\"state\\": \\"success\\",
                        \\"context\\": \\"jenkins-DEV-NODE-TESTS\\",
                        \\"description\\": \\"Jenkins CI Job: jenkins-DEV-NODE-TESTS\\",
                        \\"target_url\\": \\"https://simsgs.informatik.uni-stuttgart.de/jenkins/job/Octo-Tiger%20DEV/job/${JOB_BASE_NAME}/${BUILD_NUMBER}/console\\"
                }"
            '''
        }
        failure {
            sh '''
                github_token=$(echo ${GITHUB_TOKEN} | cut -f2 -d':')
                curl \
                    --request POST \
                    --url "https://api.github.com/repos/STEllAR-GROUP/octotiger/statuses/$GIT_COMMIT" \
                    --header "Content-Type: application/json" \
                    --header "authorization: Bearer ${github_token}" \
                    --data "{
                        \\"state\\": \\"failure\\",
                        \\"context\\": \\"jenkins-DEV-NODE-TESTS\\",
                        \\"description\\": \\"Jenkins CI Job: jenkins-DEV-NODE-TESTS\\",
                        \\"target_url\\": \\"https://simsgs.informatik.uni-stuttgart.de/jenkins/job/Octo-Tiger%20DEV/job/${JOB_BASE_NAME}/${BUILD_NUMBER}/console\\"
                }"
            '''
        }
        aborted {
            sh '''
                github_token=$(echo ${GITHUB_TOKEN} | cut -f2 -d':')
                curl \
                    --request POST \
                    --url "https://api.github.com/repos/STEllAR-GROUP/octotiger/statuses/$GIT_COMMIT" \
                    --header "Content-Type: application/json" \
                    --header "authorization: Bearer ${github_token}" \
                    --data "{
                        \\"state\\": \\"error\\",
                        \\"context\\": \\"jenkins-DEV-NODE-TESTS\\",
                        \\"description\\": \\"Jenkins CI Job: jenkins-DEV-NODE-TESTS\\",
                        \\"target_url\\": \\"https://simsgs.informatik.uni-stuttgart.de/jenkins/job/Octo-Tiger%20DEV/job/${JOB_BASE_NAME}/${BUILD_NUMBER}/console\\"
                }"
            '''
        }
    }
}
